version: 2.1

orbs:
  orb-tools: circleci/orb-tools@8.27.6
  # For test
  envsubst-alpha: sawadashota/envsubst@dev:alpha

release_filters: &release_filters
  branches:
    ignore: /.*/
  tags:
    only: /[0-9]+\.[0-9]+\.[0-9]+/

integration_dev_filters: &integration_dev_filters
  branches:
    ignore: /.*/
  tags:
    only: /integration-.*/

workflows:
  version: 2
  dev:
    jobs:
      - orb-tools/lint:
          name: lint-dev
      - orb-tools/pack:
          name: pack-dev
      - orb-tools/publish-dev:
          name: publish-dev
          context: circleci
          requires: [pack-dev]
          orb-name: sawadashota/envsubst
          publish-token-variable: CIRCLE_TOKEN
          validate: true
          checkout: false
          attach-workspace: true
      # Push `integration` tag to VCS and kick `integration_dev` workflow
      # because it's impossible to publish and use the orb in a same workflow.
      # https://circleci.com/orbs/registry/orb/circleci/orb-tools?version=8.27.5#jobs-trigger-integration-workflow
      - orb-tools/trigger-integration-workflow:
          name: trigger-integration-workflow-dev
          context: circleci
          requires: [publish-dev]
          use-git-diff: false
          ssh-fingerprints: bf:89:4f:b9:b3:3e:c8:50:72:3d:87:04:8d:0e:2b:46

  # Test orb sawadashota/envsubst@dev:alpha
  # sawadashota/envsubst@dev:alpha is published in `dev` workflow
  integration_dev:
    jobs:
      - orb-tools/pack:
          name: pack-integration_dev
          filters: *integration_dev_filters
      - orb-tools/test-in-builds:
          name: test-in-builds-integration_dev
          filters: *integration_dev_filters
          requires: [pack-integration_dev]
          orb-name: envsubst-alpha
          attach-workspace: true
          test-steps:
            - envsubst-alpha/install
            - run:
                name: Assert installed directory
                command: which envsubst && test $(which envsubst) = "/usr/local/bin/envsubst"
      - clean_up_tags:
          filters: *integration_dev_filters
          requires: [test-in-builds-integration_dev]

  production:
    jobs:
      - orb-tools/pack:
          name: pack-production
          filters: *release_filters
      - orb-tools/publish:
          name: publish-production
          filters: *release_filters
          context: circleci
          requires: [pack-production]
          orb-ref: sawadashota/envsubst@${CIRCLE_TAG}
          publish-token-variable: CIRCLE_TOKEN
          validate: true
          checkout: false
          attach-workspace: true

jobs:
  clean_up_tags:
    parameters:
      cleanup-tags-pattern:
        default: integration*
        description: >
          Before proceeding with pushing a tag to trigger an integration testing
          workflow, optionally clean up all older tags that meet a given `git tag
          -l` wildcard pattern. Defaults to a wildcard pattern including any tags
          starting with the string `integration`. (Default is intended for use when
          `tag` parameter is set to `master`.)
        type: string
    docker:
      - image: cibuilds/base
    steps:
      - checkout
      - run:
          name: cleanup old remote tags
          command: |
            # delete local tags
            git tag -d $(git tag -l "<<parameters.cleanup-tags-pattern>>")

            # fetch remote tags
            git fetch

            # delete remote tag
            git push origin --delete $(git tag -l git tag -l "<<parameters.cleanup-tags-pattern>>") || true
